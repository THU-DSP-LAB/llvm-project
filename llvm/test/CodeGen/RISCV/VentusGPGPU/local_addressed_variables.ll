; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple=riscv32 -mcpu=ventus-gpgpu -verify-machineinstrs < %s \
; RUN:   | FileCheck -check-prefix=VENTUS %s

@compute_sum_with_localmem.tmp_sum = internal addrspace(3) global [10 x i32] undef, align 4

; Function Attrs: convergent noinline norecurse nounwind optnone vscale_range(1,2048)
define dso_local ventus_kernel void @compute_sum_with_localmem(ptr addrspace(1) noundef align 4 %a, i32 noundef %n, ptr addrspace(1) noundef align 4 %sum) {
; VENTUS-LABEL: compute_sum_with_localmem:
; VENTUS:       # %bb.0: # %entry
; VENTUS-NEXT:    li t0, 12
; VENTUS-NEXT:    sw t0, -16(s0)
; VENTUS-NEXT:    sw t0, -40(s0)
; VENTUS-NEXT:    sw t0, -4(s0)
; VENTUS-NEXT:    addi s0, s0, -40
; VENTUS-NEXT:    ret
entry:
  %a.addr = alloca ptr addrspace(1), align 4, addrspace(5)
  %n.addr = alloca i32, align 4, addrspace(5)
  %sum.addr = alloca ptr addrspace(1), align 4, addrspace(5)
  store ptr addrspace(1) %a, ptr addrspace(5) %a.addr, align 4
  store i32 %n, ptr addrspace(5) %n.addr, align 4
  store ptr addrspace(1) %sum, ptr addrspace(5) %sum.addr, align 4
  store i32 12, ptr addrspace(3) getelementptr inbounds ([10 x i32], ptr addrspace(3) @compute_sum_with_localmem.tmp_sum, i32 0, i32 6), align 4
  store i32 12, ptr addrspace(3) @compute_sum_with_localmem.tmp_sum, align 4
  store i32 12, ptr addrspace(3) getelementptr inbounds ([10 x i32], ptr addrspace(3) @compute_sum_with_localmem.tmp_sum, i32 0, i32 9), align 4
  ret void
}
